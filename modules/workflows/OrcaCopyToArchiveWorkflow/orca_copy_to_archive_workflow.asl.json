{
  "Comment": "On-Demand execution of copy_to_archive.",
  "StartAt": "CopyToArchive",
  "States": {
    "CopyToArchive": {
      "Parameters": {
        "event.$": "$",
        "input.$": "$.payload",
        "config": {
          "providerId.$": "$.meta.provider.id",
          "executionId.$": "$.cumulus_meta.execution_name",
          "collectionShortname.$": "$.meta.collection.name",
          "collectionVersion.$": "$.meta.collection.version"
        },
        "optionalValues": {
          "config": {
            "excludedFileExtensions": "$.meta.collection.meta.orca.excludedFileExtensions",
            "s3MultipartChunksizeMb": "$.meta.collection.meta.s3MultipartChunksizeMb",
            "providerName": "$.meta.provider.name",
            "defaultBucketOverride": "$.meta.collection.meta.orca.defaultBucketOverride",
            "defaultStorageClassOverride": "$.meta.collection.meta.orca.defaultStorageClassOverride",
            "fileDestinationOverride": "$.meta.collection.meta.orca.fileDestinationOverride"
          }
        }
      },
      "Type": "Task",
      "Resource": "${orca_lambda_copy_to_archive_arn}",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.exception",
          "Next": "WorkflowFailed"
        }
      ],
      "Next": "WorkflowSucceeded"
    },
    "WorkflowFailed": {
      "Type": "Fail",
      "Cause": "Workflow failed"
    },
    "WorkflowSucceeded": {
      "Type": "Succeed"
    }
  }
}