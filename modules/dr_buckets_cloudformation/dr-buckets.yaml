AWSTemplateFormatVersion: 2010-09-09
Description: 'AWS CloudFormation Template for ORCA bucket creation:
  ORCA requires the creation of two S3 buckets. One for archival and one for reporting.
  Both buckets require cross account access so that the corresponding Cumulus account can access the bucket.'
Parameters:
  PREFIX:
    Type: String
    Description: 'The prefix to use in bucket names'
  CumulusAccountID:
    Type: String
    Description: 'The account ID of the Cumulus account that requires access'
Resources:
  S3ARCHBUCKET:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${PREFIX}-orca-archive'
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
  S3ARCHBUCKETPOL:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Sub '${PREFIX}-orca-archive'
      PolicyDocument:
        Id: "Cross Account Access"
        Version: "2012-10-17"
        Statement:
          - Sid: denyInsecureTransport
            Action: [
              "s3:*"
            ]
            Effect: Deny
            Resource: [
              !Sub 'arn:aws:s3:::${S3ARCHBUCKET}',
              !Sub 'arn:aws:s3:::${S3ARCHBUCKET}/*'
            ]
            Principal: "*"
            Condition:
              Bool:
                "aws:SecureTransport": false
          - Sid: CrossAccPolicyDoc
            Action: [
              "s3:GetObject",
              "s3:GetObjectVersion",
              "s3:RestoreObject",
              "s3:GetBucketVersioning",
              "s3:GetBucketNotification",
              "s3:ListBucket",
              "s3:PutBucketNotification",
              "s3:GetInventoryConfiguration",
              "s3:PutInventoryConfiguration",
              "s3:ListBucketVersions"
            ]
            Effect: Allow
            Resource: [
              !Sub 'arn:aws:s3:::${S3ARCHBUCKET}',
              !Sub 'arn:aws:s3:::${S3ARCHBUCKET}/*'
            ]
            Principal:
              AWS: !Join ['', ["arn:aws:iam::", !Ref CumulusAccountID, ":root"]]
          - Sid: "Cross Account Write Access"
            Action: "s3:PutObject"
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${S3ARCHBUCKET}/*'
            Condition:
              StringEquals:
                's3:x-amz-storage-class':
                  - 'GLACIER'
                  - 'DEEP_ARCHIVE'
            Principal:
              AWS: !Join ['', ["arn:aws:iam::", !Ref CumulusAccountID, ":root"]]
    DependsOn: S3ARCHBUCKET
  S3REPBUCKET:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${PREFIX}-orca-reports'
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
  S3REPBUCKETPOL:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Sub '${PREFIX}-orca-reports'
      PolicyDocument:
        Id: "Cross Account Access"
        Version: "2012-10-17"
        Statement:
          - Sid: denyInsecureTransport
            Action: [
              "s3:*"
            ]
            Effect: Deny
            Resource: [
              !Sub 'arn:aws:s3:::${S3REPBUCKET}',
              !Sub 'arn:aws:s3:::${S3REPBUCKET}/*'
            ]
            Principal: "*"
            Condition:
              Bool:
                "aws:SecureTransport": false
          - Sid: CrossAccPolicyDoc
            Action: [
              "s3:GetObject",
              "s3:GetBucketNotification",
              "s3:ListBucket",
              "s3:PutObject",
              "s3:PutBucketNotification"
            ]
            Effect: Allow
            Resource: [
              !Sub 'arn:aws:s3:::${S3REPBUCKET}',
              !Sub 'arn:aws:s3:::${S3REPBUCKET}/*'
            ]
            Principal:
              AWS: !Join ['', ["arn:aws:iam::", !Ref CumulusAccountID, ":root"]]
          - Sid: !Sub 'Inventory-${PREFIX}-orca-reports'
            Action: "s3:PutObject"
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${S3REPBUCKET}/*'
            Condition:
              StringEquals:
                'aws:SourceAccount': !Ref AWS::AccountId
              ArnLike:
                aws:SourceArn: !Sub 'arn:aws:s3:::${PREFIX}-orca-reports'
            Principal:
              Service: "s3.amazonaws.com"
    DependsOn: S3REPBUCKET
Outputs:
  ArchiveBucket:
    Description: Archive S3 Bucket Name
    Value: !Ref S3ARCHBUCKET
  ReportsBucket:
    Description: Reports S3 Bucket Name
    Value: !Ref S3REPBUCKET
