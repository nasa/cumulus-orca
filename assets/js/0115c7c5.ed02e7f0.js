"use strict";(self.webpackChunkorca_website=self.webpackChunkorca_website||[]).push([[4626],{6898:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>r,default:()=>_,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var n=t(4848),i=t(8453);const s={id:"research-APIGateway",title:"API Gateway Research Notes",description:"Research Notes on API Gateway."},r=void 0,o={id:"developer/research/research-APIGateway",title:"API Gateway Research Notes",description:"Research Notes on API Gateway.",source:"@site/docs/developer/research/research-APIGateway.md",sourceDirName:"developer/research",slug:"/developer/research/research-APIGateway",permalink:"/cumulus-orca/docs/developer/research/research-APIGateway",draft:!1,unlisted:!1,editUrl:"https://github.com/nasa/cumulus-orca/edit/develop/website/docs/developer/research/research-APIGateway.md",tags:[],version:"current",frontMatter:{id:"research-APIGateway",title:"API Gateway Research Notes",description:"Research Notes on API Gateway."},sidebar:"dev_guide",previous:{title:"Localstack Research Notes",permalink:"/cumulus-orca/docs/developer/research/research-localstack"},next:{title:"ORCA Reconciliation",permalink:"/cumulus-orca/docs/developer/research/research-reconciliation"}},c={},p=[{value:"Overview",id:"overview",level:2},{value:"Implementation Details",id:"implementation-details",level:3},{value:"Future Direction",id:"future-direction",level:3},{value:"Sources",id:"sources",level:4}];function d(e){const a={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.a,{href:"https://aws.amazon.com/api-gateway/",children:"AWS API Gateways"})," are used to define access to a service."]}),"\n",(0,n.jsx)(a.h3,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["Requires several components in Terraform.","\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["aws_api_gateway_rest_api","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:'resource "aws_api_gateway_rest_api" "[name]_api" {\n  name = "${var.prefix}_[name]_api"\n  }\n'})}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["aws_api_gateway_resource","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:'resource "aws_api_gateway_resource" "[name]_api_resource" {\n  path_part   = "{proxy+}" # This acts as a "catch all"\n  parent_id   = aws_api_gateway_rest_api.[name]_api.root_resource_id\n  rest_api_id = aws_api_gateway_rest_api.[name]_api.id\n  }\n'})}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["aws_api_gateway_method","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:'resource "aws_api_gateway_method" "[name]_api_method" {\n  rest_api_id   = aws_api_gateway_rest_api.[name]_api.id\n  resource_id   = aws_api_gateway_resource.[name]_api_resource.id\n  http_method = "ANY"\n  # todo: Make sure this is locked down against external access.\n  authorization = "NONE"\n  }\n'})}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["aws_api_gateway_integration","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:'resource "aws_api_gateway_integration" "integration" {\n  rest_api_id             = aws_api_gateway_rest_api.[name]_api.id\n  resource_id             = aws_api_gateway_resource.[name]_api_resource.id\n  http_method             = aws_api_gateway_method.[name]_api_method.http_method\n  integration_http_method = "POST"\n  type                    = "AWS"\n  uri                     = aws_lambda_function.[name].invoke_arn\n  }\n'})}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["aws_api_gateway_method_response","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:'resource "aws_api_gateway_method_response" "[name]_response_200" {\n  rest_api_id = aws_api_gateway_rest_api.[name]_api.id\n  resource_id = aws_api_gateway_resource.[name]_api_resource.id\n  http_method = aws_api_gateway_method.[name]_api_method.http_method\n  status_code = "200"\n  }\n'})}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["aws_api_gateway_integration_response","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:'resource "aws_api_gateway_integration_response" "[name]_api_response" {\ndepends_on = [aws_api_gateway_integration.[name]_api_integration]\nrest_api_id = aws_api_gateway_rest_api.[name]_api.id\nresource_id = aws_api_gateway_resource.[name]_api_resource.id\nhttp_method = aws_api_gateway_method.[name]_api_method.http_method\nstatus_code = aws_api_gateway_method_response.[name]_response_200.status_code\n\n# Transforms the backend JSON response to XML\n# "stackTrace" being present in the returned dictionary will cause a return code of 500\n# This will happen automatically if your Python raises an unhandled exception.\n# You can return a dictionary with a manually set "httpStatus" key with an int value to set the return code of the HTTP request.\nresponse_templates = {\n  "application/json" = <<EOF\n  #set($inputRoot = $input.path(\'$\'))\n  $input.json("$")\n  \n  #if($input.path("stackTrace") != \'\')\n  #set($context.responseOverride.status = 500)\n  #elseif($input.path("httpStatus") != \'\')\n  #set($context.responseOverride.status = $input.path(\'httpStatus\'))\n  #end\n  EOF\n    }\n  }\n'})}),"\n"]}),"\n",(0,n.jsx)(a.li,{children:"aws_api_gateway_deployment"}),"\n"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:'  resource "aws_api_gateway_deployment" "[name]_api_deployment" {\n    rest_api_id = aws_api_gateway_rest_api.[name]_api.id\n    stage_name    = "orca" #add your stage name\n  }\n'})}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["aws_lambda_permission","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:'resource "aws_lambda_permission" "[name]_api_permission" {\n  statement_id  = "AllowExecutionFromAPIGateway"\n  action        = "lambda:InvokeFunction"\n  function_name = aws_lambda_function.[name].function_name\n  principal     = "apigateway.amazonaws.com"\n\n  # More: http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\n  # Alternate potential source_arn: "${aws_api_gateway_rest_api.[name]_api.execution_arn}/*/$ {aws_api_gateway_method.request_status[name]api_method.http_method}${aws_api_gateway_resource.[name]_api_resource.path}"\n  # source_arn = "${aws_api_gateway_rest_api.[name]_api.execution_arn}/*/${aws_api_gateway_method.[name]_api_method.http_method}${aws_api_gateway_resource.[name]_api_resource.path}"\n}\n'})}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["aws_api_gateway_rest_api_policy","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:'resource "aws_lambda_permission" "[name]_api_resource_policy" {\n\n    rest_api_id = aws_api_gateway_rest_api.[name]_api.id\n    policy = <<EOF\n  {\n    "Version": "2012-10-17",\n    "Statement": [\n      {\n        "Effect": "Allow",\n        "Principal": {\n          "AWS": "*"\n        },\n        "Action": "execute-api:Invoke",\n        "Resource": "${aws_api_gateway_rest_api.[name]_api.execution_arn}"\n      }\n    ]\n  }\n  EOF\n}\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["Proper HTTP error codes can be returned from a Lambda to the gateway via a dictionary, as shown in ",(0,n.jsx)(a.a,{href:"https://docs.aws.amazon.com/apigateway/latest/developerguide/handle-errors-in-lambda-integration.html",children:"Handle Lambda errors in API Gateway"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["For more potential patterns, see ",(0,n.jsx)(a.a,{href:"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-integration-settings-integration-response.html",children:"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-integration-settings-integration-response.html"})," and ",(0,n.jsx)(a.a,{href:"https://aws.amazon.com/blogs/compute/error-handling-patterns-in-amazon-api-gateway-and-aws-lambda/",children:"https://aws.amazon.com/blogs/compute/error-handling-patterns-in-amazon-api-gateway-and-aws-lambda/"})]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["In order to access a private API, a ",(0,n.jsx)(a.code,{children:"VPC endpoint"})," has to be created in VPC. Secondly, a ",(0,n.jsx)(a.a,{href:"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-resource-policies-create-attach.html",children:"resource policy"})," needs to be created and attached to the API.","\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["For more information, see\n",(0,n.jsx)(a.a,{href:"https://medium.com/@ilia.lazebnik/simplifying-aws-private-api-gateway-vpc-endpoint-association-with-terraform-b379a247afbf",children:"https://medium.com/@ilia.lazebnik/simplifying-aws-private-api-gateway-vpc-endpoint-association-with-terraform-b379a247afbf"})," and\n",(0,n.jsx)(a.a,{href:"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-private-apis.html#apigateway-private-api-test-invoke-url",children:"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-private-apis.html#apigateway-private-api-test-invoke-url"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.h3,{id:"future-direction",children:"Future Direction"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:['This code is not secure. See the "authorization" value in ',(0,n.jsx)(a.a,{href:"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",children:"aws_api_gateway_method"}),"."]}),"\n"]}),"\n",(0,n.jsx)(a.h4,{id:"sources",children:"Sources"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_integration",children:"Terraform aws_api_gateway_integration"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission",children:"Terraform aws_lambda_permission"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://docs.aws.amazon.com/apigateway/latest/developerguide/handle-errors-in-lambda-integration.html",children:"Handle Lambda errors in API Gateway"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://docs.aws.amazon.com/apigateway/api-reference/handling-errors/",children:"Handling Errors in API Gateway"})}),"\n"]})]})}function _(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>r,x:()=>o});var n=t(6540);const i={},s=n.createContext(i);function r(e){const a=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);