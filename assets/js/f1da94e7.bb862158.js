"use strict";(self.webpackChunkorca_website=self.webpackChunkorca_website||[]).push([[1730],{4400:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"developer/deployment-guide/recovery-workflow","title":"Recovery Workflow","description":"Provides developers with the steps of how data are recovered.","source":"@site/docs/developer/deployment-guide/recovery-workflow.mdx","sourceDirName":"developer/deployment-guide","slug":"/developer/deployment-guide/recovery-workflow","permalink":"/cumulus-orca/docs/developer/deployment-guide/recovery-workflow","draft":false,"unlisted":false,"editUrl":"https://github.com/nasa/cumulus-orca/edit/develop/website/docs/developer/deployment-guide/recovery-workflow.mdx","tags":[],"version":"current","frontMatter":{"id":"recovery-workflow","title":"Recovery Workflow","description":"Provides developers with the steps of how data are recovered."},"sidebar":"dev_guide","previous":{"title":"Upgrading ORCA","permalink":"/cumulus-orca/docs/developer/deployment-guide/deployment-upgrading-orca"},"next":{"title":"Testing Deployment","permalink":"/cumulus-orca/docs/developer/deployment-guide/testing_deployment"}}');var n=t(4848),i=t(8453),s=t(6025);const a={id:"recovery-workflow",title:"Recovery Workflow",description:"Provides developers with the steps of how data are recovered."},c=void 0,d={},l=[];function u(e){const o={a:"a",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.p,{children:"The ORCA recovery workflow diagram below visualizes the process of\nrecovering missing data in Cumulus. As each user organization will\nhave unique needs when recovering data, the diagram provides details\non which components can be modified and which components should not\nbe modified. Refer to the legend on the diagram for details on which\ncomponents can be modified."}),"\n",(0,n.jsx)(o.p,{children:"A developer kicks off the recovery processes manually via the AWS UI,\nwhich then triggers an API that kicks off a recovery workflow. Recovery is an asynchronous operation since data\nrequested from GLACIER can take 4 hours or more to reconstitute,\nand DEEP_ARCHIVE can take 12 hours.\nSince it is asynchronous, the recovery container\nrelies on a database to maintain the status of the request and event\ndriven triggers to restore the data once it has been reconstituted\nfrom archive into an S3 bucket. Currently data is copied back to the\nCumulus S3 primary data bucket which is the default bucket. The developer\nhas the option to override the default bucket with another restore bucket if desired.\nDetermining the status of the recovery job is done manually by querying the database\ndirectly or by checking the status on the UI. In addition, you can also check the job status by calling the ORCA API."}),"\n",(0,n.jsx)("img",{src:(0,s.Ay)("img/ORCA-Recovery-Workflow.svg"),imageAlt:"ORCA Recovery Workflow Context",zoomInPic:(0,s.Ay)("img/zoom-in.svg"),zoomOutPic:(0,s.Ay)("img/zoom-out.svg"),resetPic:(0,s.Ay)("img/zoom-pan-reset.svg")}),"\n",(0,n.jsxs)(o.p,{children:["See the recovery workflow ",(0,n.jsx)(o.a,{href:"https://github.com/nasa/cumulus-orca/tree/master/modules/workflows/OrcaRecoveryWorkflow",children:"Step Function module"}),"\nfor additional details on recovering files belonging to a granule."]}),"\n",(0,n.jsxs)(o.p,{children:["For additional details on the recovery workflow input and output, see ",(0,n.jsx)(o.a,{href:"https://nasa.github.io/cumulus-orca/docs/operator/data-recovery#recovery-workflow-input-and-output-examples",children:"this documentation"}),"."]})]})}function h(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>s,x:()=>a});var r=t(6540);const n={},i=r.createContext(n);function s(e){const o=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(i.Provider,{value:o},e.children)}}}]);