"use strict";(self.webpackChunkorca_website=self.webpackChunkorca_website||[]).push([[6578],{6398:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>h});const o=JSON.parse('{"id":"about/architecture/architecture-software-system","title":"Software System Architecture","description":"High level overview of ORCA software system architecture.","source":"@site/docs/about/architecture/architecture-software-system.mdx","sourceDirName":"about/architecture","slug":"/about/architecture/architecture-software-system","permalink":"/cumulus-orca/docs/about/architecture/architecture-software-system","draft":false,"unlisted":false,"editUrl":"https://github.com/nasa/cumulus-orca/edit/develop/website/docs/about/architecture/architecture-software-system.mdx","tags":[],"version":"current","frontMatter":{"id":"architecture-software-system","title":"Software System Architecture","description":"High level overview of ORCA software system architecture."},"sidebar":"about_orca","previous":{"title":"ORCA Architecture Introduction","permalink":"/cumulus-orca/docs/about/architecture/architecture-intro"},"next":{"title":"Archive Container Architecture","permalink":"/cumulus-orca/docs/about/architecture/architecture-archive-container"}}');var s=r(4848),i=r(8453),n=r(6025);const c={id:"architecture-software-system",title:"Software System Architecture",description:"High level overview of ORCA software system architecture."},a=void 0,u={},h=[];function m(e){const t={p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"The ORCA software system is currently made up of three primary functions. The\nfirst function is to archive a secondary copy of the data. This is done by\ncapitalizing on Cumulus Workflows and AWS Lambda. An end user would only need to\nadd the proper ORCA components to their ingest workflow in order to use the feature.\nThe second function is recovery of data from the secondary copy. Adding this functionality\nis more involved but requires the user to add the proper components and\nconfiguration to Cumulus to utilize. The final function is to provide end users\ninsight into the ORCA system for monitoring and data management. This is done by\nproviding the end user with an API to access information on the ORCA system. The\ndiagram below gives a software system view of ORCA and the various containers and\nprotocols used within the system. The following pages go into further details on\neach container."}),"\n",(0,s.jsx)("img",{src:(0,n.Ay)("/img/ORCA-Architecture-ORCA-System.svg"),imageAlt:"ORCA System Architecture",zoomInPic:(0,n.Ay)("img/zoom-in.svg"),zoomOutPic:(0,n.Ay)("img/zoom-out.svg"),resetPic:(0,n.Ay)("img/zoom-pan-reset.svg")})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>n,x:()=>c});var o=r(6540);const s={},i=o.createContext(s);function n(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);