"use strict";(self.webpackChunkorca_website=self.webpackChunkorca_website||[]).push([[6629],{5379:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=t(4848),s=t(8453);const o={id:"local-debugging",title:"Local Debugging with AWS Resources",description:"Instructions on Running Code Locally Against AWS Resources"},a=void 0,l={id:"developer/development-guide/code/local-debugging",title:"Local Debugging with AWS Resources",description:"Instructions on Running Code Locally Against AWS Resources",source:"@site/docs/developer/development-guide/code/local-debugging.md",sourceDirName:"developer/development-guide/code",slug:"/developer/development-guide/code/local-debugging",permalink:"/cumulus-orca/docs/developer/development-guide/code/local-debugging",draft:!1,unlisted:!1,editUrl:"https://github.com/nasa/cumulus-orca/edit/develop/website/docs/developer/development-guide/code/local-debugging.md",tags:[],version:"current",frontMatter:{id:"local-debugging",title:"Local Debugging with AWS Resources",description:"Instructions on Running Code Locally Against AWS Resources"},sidebar:"dev_guide",previous:{title:"Running Pylint Against Your Code",permalink:"/cumulus-orca/docs/developer/development-guide/code/linting"},next:{title:"Unit Tests",permalink:"/cumulus-orca/docs/developer/development-guide/code/unit-tests"}},r={},d=[{value:"Limitations",id:"limitations",level:2},{value:"Setup",id:"setup",level:2},{value:"Optional Setup",id:"optional-setup",level:3},{value:"Debugging Example",id:"debugging-example",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Running and debugging code locally is a vital phase in the development and testing process.\nUnfortunately, we do not currently have a method of simulating the cloud resources of AWS on a developer's machine.\nThe methods described below will give a developer machine access to AWS resources, which can be useful for testing input/output with real data and line-by-line debugging in the IDE of your choice."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#limitations",children:"Limitations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#setup",children:"Setup"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#debugging-example",children:"Debugging Example"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,i.jsx)(n.p,{children:"Note that this is not a replacement for integration testing.\nPrograms should still be deployed to a realistic AWS environment and run with realistic data to ensure that the methods described below do not grant an unexpected advantage/disadvantage to locally-run code."}),"\n",(0,i.jsx)(n.p,{children:"This method also bypasses much of the AWS configuration and deployment steps.\nEnvironment variables, Key-Value-Paris, and other inputs should be double-checked in AWS, especially if their function is internal to the program and otherwise invisible."}),"\n",(0,i.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsxs)(n.p,{children:["This guide assumes that you have ",(0,i.jsx)(n.a,{href:"/cumulus-orca/docs/developer/deployment-guide/deployment-with-cumulus",children:"deployed ORCA"}),".\nCumulus components are largely unneeded, though the ",(0,i.jsx)(n.code,{children:"PREFIX-CumulusECSCluster"})," EC2 Instance is required.\nThis EC2 Instance's 'Instance ID' can be identified using the AWS GUI or by running"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'aws ec2 describe-instances --filters Name=instance-state-name,Values=running Name=tag:Name,Values={PREFIX}-CumulusECSCluster --query "Reservations[*].Instances[*].InstanceId" --output text\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Once the Instance ID is identified, run the following in a terminal. Be sure to replace ",(0,i.jsx)(n.code,{children:"{Instance ID}"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"aws ssm start-session --target {Instance ID} --document-name AWS-StartPortForwardingSession --parameters portNumber=22,localPortNumber=6868\n"})}),"\n",(0,i.jsx)(n.h3,{id:"optional-setup",children:"Optional Setup"}),"\n",(0,i.jsx)(n.p,{children:"If you have deployed the RDS Database, and want to run code against it or check its contents via Aqua Data Studio, an extra step is required."}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"AWS is inconsistent with naming. RDS 'Database' may also be called RDS 'Instance'"})}),"\n",(0,i.jsx)(n.p,{children:"First, retrieve the database's 'Endpoint'.\nIf you deployed via Cumulus' module, this is the 'rds_endpoint' output.\nOtherwise, it can be found via the AWS GUI."}),"\n",(0,i.jsxs)(n.p,{children:["Run the following in an terminal. Be sure to replace ",(0,i.jsx)(n.code,{children:"{DB Endpoint}"})," and ",(0,i.jsx)(n.code,{children:"{Path to PREFIX-key-pair.pem}"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'ssh -p 6868 -L 5432:{DB Endpoint}:5432 -i "{Path to PREFIX-key-pair.pem}" -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" ec2-user@127.0.0.1\n'})}),"\n",(0,i.jsx)(n.h2,{id:"debugging-example",children:"Debugging Example"}),"\n",(0,i.jsxs)(n.p,{children:["After following the steps in ",(0,i.jsx)(n.a,{href:"/cumulus-orca/docs/developer/development-guide/code/setup-dev-env",children:"Setup Dev Env"})]}),"\n",(0,i.jsxs)(n.p,{children:["Ideally, developed code should isolate AWS configuration retrieval to a single function.\nFor example, the following code bypasses secret retrieval for quicker testing turnaround by calling ",(0,i.jsx)(n.code,{children:"task"})," instead of the ",(0,i.jsx)(n.code,{children:"handler"})," entry-point."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import request_status_for_job\n\ntemp_db_connect_info = {\n    "admin_database": "postgres",\n    "admin_password": "An0th3rS3cr3t",\n    "admin_username": "postgres",\n    "host": "localhost",\n    "port": "5432",\n    "user_database": "PREFIX_orca",\n    "user_password": "This1sAS3cr3t",\n    "user_username": "PREFIX_orcauser",\n}\n\nprint(request_status_for_job.task(\n    "08c767d2-b4b9-4a05-9bc2-375038f33237",\n    temp_db_connect_info))\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(6540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);